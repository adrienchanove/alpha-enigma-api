{
    "swagger": "2.0",
    "info": {
        "description": "My Test Api to compare go and node",
        "title": "My Test Api",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/auth/token": {
            "post": {
                "description": "Request a token for authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request a token",
                "parameters": [
                    {
                        "description": "Authentication request",
                        "name": "authRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AuthResponse"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "description": "Get a list of all messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get all messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.Message"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new message with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Create a new message",
                "parameters": [
                    {
                        "description": "Create message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Message"
                        }
                    }
                }
            }
        },
        "/messages/getDiscussions/{userId}": {
            "get": {
                "description": "Return a user list who the user have discussed with",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Return a list of user who a user speaks to",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.UserGet"
                            }
                        }
                    }
                }
            }
        },
        "/messages/getMessagesBetween/{userId1}/{userId2}": {
            "get": {
                "description": "get messages between two user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "get messages between two user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID 1",
                        "name": "userId1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID 2",
                        "name": "userId2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.Message"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a list of all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.UserGet"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "Create user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UserPost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/routes.UserGet"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.UserGet"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "routes.AuthRequest": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "routes.AuthResponse": {
            "type": "object",
            "properties": {
                "encryptedToken": {
                    "type": "string"
                }
            }
        },
        "routes.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "receiverId": {
                    "type": "integer"
                },
                "senderId": {
                    "type": "integer"
                }
            }
        },
        "routes.UserGet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "publicKey": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "routes.UserPost": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "publicKey": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}