basePath: /
definitions:
  routes.Message:
    properties:
      content:
        type: string
      id:
        type: integer
      receiverId:
        type: integer
      senderId:
        type: integer
    type: object
  routes.User:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: My Test Api to compare go and node
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: My Test Api
  version: "1.0"
paths:
  /messages:
    get:
      consumes:
      - application/json
      description: Get a list of all messages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/routes.Message'
            type: array
      summary: Get all messages
      tags:
      - messages
    post:
      consumes:
      - application/json
      description: Create a new message with the input payload
      parameters:
      - description: Create message
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/routes.Message'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.Message'
      summary: Create a new message
      tags:
      - messages
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/routes.User'
            type: array
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/routes.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.User'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.User'
      summary: Get a user by ID
      tags:
      - users
swagger: "2.0"
